// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using prueba.Data;

namespace prueba.Migrations
{
    [DbContext(typeof(PruebaContext))]
    partial class PruebaContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.3")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("prueba.Models.T_Clientes", b =>
                {
                    b.Property<Guid>("ID_Cliente")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newsequentialid())");

                    b.Property<double>("Cedula")
                        .HasColumnType("float");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("ID_Cliente");

                    b.ToTable("T_Clientes");
                });

            modelBuilder.Entity("prueba.Models.T_Listas", b =>
                {
                    b.Property<Guid>("ID_lista")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newsequentialid())");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int>("Duracion")
                        .HasColumnType("int");

                    b.HasKey("ID_lista");

                    b.ToTable("T_Listas");

                    b.HasData(
                        new
                        {
                            ID_lista = new Guid("8bf1a02f-548f-474e-b19b-05aed0b3befa"),
                            Descripcion = "Lista 1",
                            Duracion = 2
                        },
                        new
                        {
                            ID_lista = new Guid("f25a4403-b412-4cf2-b6db-395a61bc7c49"),
                            Descripcion = "Lista 2",
                            Duracion = 3
                        });
                });

            modelBuilder.Entity("prueba.Models.T_ListasClientes", b =>
                {
                    b.Property<Guid>("ID_ListaCliente")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newsequentialid())");

                    b.Property<int>("Duracion")
                        .HasColumnType("int");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ID_Cliente")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ID_Lista")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ID_ListaCliente");

                    b.HasIndex("ID_Cliente");

                    b.HasIndex("ID_Lista");

                    b.ToTable("T_ListasClientes");
                });

            modelBuilder.Entity("prueba.Models.T_ListasClientes", b =>
                {
                    b.HasOne("prueba.Models.T_Clientes", "ID_ClientesNavigation")
                        .WithMany("T_ListasClientes")
                        .HasForeignKey("ID_Cliente")
                        .IsRequired();

                    b.HasOne("prueba.Models.T_Listas", "ID_ListaNavigation")
                        .WithMany("T_ListasClientes")
                        .HasForeignKey("ID_Lista")
                        .IsRequired();

                    b.Navigation("ID_ClientesNavigation");

                    b.Navigation("ID_ListaNavigation");
                });

            modelBuilder.Entity("prueba.Models.T_Clientes", b =>
                {
                    b.Navigation("T_ListasClientes");
                });

            modelBuilder.Entity("prueba.Models.T_Listas", b =>
                {
                    b.Navigation("T_ListasClientes");
                });
#pragma warning restore 612, 618
        }
    }
}
